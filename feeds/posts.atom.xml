<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dawn's博客 - Posts</title><link href="https://Black-Web.github.io/" rel="alternate"></link><link href="https://Black-Web.github.io/feeds/posts.atom.xml" rel="self"></link><id>https://Black-Web.github.io/</id><updated>2018-06-16T12:00:00+08:00</updated><subtitle>脚踏实地，追求真理</subtitle><entry><title>PyPSA在电力系统潮流计算中的应用</title><link href="https://Black-Web.github.io/apply_python_psa.html" rel="alternate"></link><published>2018-06-16T12:00:00+08:00</published><updated>2018-06-16T12:00:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2018-06-16:/apply_python_psa.html</id><summary type="html">&lt;p&gt;介绍使用PyPSA进行潮流计算。&lt;/p&gt;</summary><content type="html">&lt;h1&gt;PyPSA 在电力系统潮流计算中的应用&lt;/h1&gt;
&lt;p&gt;Python语言被广泛应用于科学计算，尤其是当前炒的火热的人工智能领域，实际上，除了人工智能，在电力系统中，Python也可以发挥作用。&lt;/p&gt;
&lt;h2&gt;几个用于电力系统分析的Python程序包&lt;/h2&gt;
&lt;p&gt;目前有以下几个Python Package可用于电力系统分析，不一定会很全，欢迎&lt;a href="/contact"&gt;联系我&lt;/a&gt;进行补充。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lthurner/pandapower"&gt;pandapower&lt;/a&gt; -- 这个包由德国卡塞尔大学（University of Kassel）和弗劳恩霍夫研究所（Fraunhofer Institute）合作开发，具体可以参考&lt;a href="https://www.uni-kassel.de/eecs/en/fachgebiete/e2n/software.html"&gt;卡塞尔大学网站&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PyPSA/PyPSA"&gt;PyPSA&lt;/a&gt; -- 由&lt;a href="https://arxiv.org/abs/1707.09913"&gt;康奈尔大学&lt;/a&gt;主导开发。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rwl/PYPOWER"&gt;PYPOWER&lt;/a&gt; -- 这是一个matlab下matpower的Python移植，还有一个基于它的系统暂态稳定性仿真程序&lt;a href="https://github.com/susantoj/PYPOWER-Dynamics"&gt;PYPOWER-Dynamics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SanPen/GridCal"&gt;GridCal&lt;/a&gt; -- 带有图形界面的电力系统分析软件，画面很赞。看下面项目主页的示例图：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="GridCal示例图" src="https://raw.githubusercontent.com/SanPen/GridCal/master/pics/GridCal.png"/&gt;
&lt;em&gt; &lt;a href="https://github.com/bdw/GridKit"&gt;GridKit&lt;/a&gt; -- 由德国的一个SciGRID项目产生，但这个就不是纯粹用Python写成的了。
&lt;/em&gt; 还有一个国内的&lt;a href="https://github.com/Maples7/PowerFlowCalculation"&gt;PowerFlowCalculation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以看到在目前Dawn所收集到的信息里，有两个都是德国的，德国的电力工业也的确发达。&lt;/p&gt;
&lt;h2&gt;用PyPSA进行潮流计算&lt;/h2&gt;
&lt;p&gt;本文主要介绍PyPSA的使用，以何的教材&lt;code&gt;例题11-5&lt;/code&gt;作为算例，用Newton-Raphson法进行潮流计算。&lt;/p&gt;
&lt;p&gt;在开始前需导入以下包。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pypsa&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;psa&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;初始化网络&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;psa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Network&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'simple_net'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;首先创建一个网络，命名为&lt;code&gt;simple_net&lt;/code&gt;，当然也可以为complex net，名字开心就好。下面用一个循环加入4条母线：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Bus'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Bus {}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后可以查看各母线的有关参数，对这些参数的详细解释请参考官方文档，这里我们只关心&lt;code&gt;control&lt;/code&gt;一栏。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table class="dataframe"&gt;
&lt;thead&gt;
&lt;tr style="text-align: right;"&gt;
&lt;th&gt;attribute&lt;/th&gt;
&lt;th&gt;v_nom&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;x&lt;/th&gt;
&lt;th&gt;y&lt;/th&gt;
&lt;th&gt;carrier&lt;/th&gt;
&lt;th&gt;v_mag_pu_set&lt;/th&gt;
&lt;th&gt;v_mag_pu_min&lt;/th&gt;
&lt;th&gt;v_mag_pu_max&lt;/th&gt;
&lt;th&gt;control&lt;/th&gt;
&lt;th&gt;sub_network&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;Bus 1&lt;/th&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;AC&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;inf&lt;/td&gt;
&lt;td&gt;PQ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;Bus 2&lt;/th&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;AC&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;inf&lt;/td&gt;
&lt;td&gt;PQ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;Bus 3&lt;/th&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;AC&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;inf&lt;/td&gt;
&lt;td&gt;PQ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;Bus 4&lt;/th&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;AC&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;inf&lt;/td&gt;
&lt;td&gt;PQ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;根据例题&lt;strong&gt;11-5&lt;/strong&gt;给定条件，节点3的控制类型应是&lt;code&gt;PV&lt;/code&gt;，节点4应为&lt;code&gt;Slack&lt;/code&gt;，即松弛节点/平衡节点。
这与上表显示不符，&lt;strong&gt;但先别急着直接改变它们的值&lt;/strong&gt;，文档对于&lt;code&gt;control&lt;/code&gt;值是这么说的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that this attribute is an output inherited from the controls of the generators attached to the bus; setting it directly on the bus will not have any effect.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说，进行潮流计算时，程序会根据所给条件，自动判断哪些节点是哪些类型，并在计算后作为输出结果。&lt;/p&gt;
&lt;h3&gt;参数设置&lt;/h3&gt;
&lt;p&gt;接下来向各节点添加支路，变压器和发电机,并添加负载。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Line'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Line 1-2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.01528&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Line'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Line 1-4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.0192&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Line'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Line 2-4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.08&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.01413&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Transformer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'T_1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'pi'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tap_ratio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Generator'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'G_4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Bus 4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;control&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Slack'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Generator'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'G_3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Bus 3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;control&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'PV'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;p_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Load'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Load 1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;p_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;q_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.18&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Load'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Load 2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;p_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;q_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关于上面的代码，有三点需要注意：
&lt;em&gt; 变压器的变比默认是bus0与bus1的电压之比，即&lt;span class="math"&gt;\(k = V_{bus0} : V_{bus1}\)&lt;/span&gt;
&lt;/em&gt; PyPSA内部的变压器模型把输入的阻抗和导纳参数认为是归算到低压侧的参数，因此上面需要把参数除以变比平方来归算到低压侧。
* 连接有发电机的母线（Bus）的控制类型会随发电机的类型而改变。
文档原文是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that the control strategy for active and reactive power PQ/PV/Slack is set on the generators NOT on the buses.
Buses then inherit the control strategy from the generators attached at the bus (defaulting to PQ if there is no generator
attached). Any PV generator will make the whole bus a PV bus. For PV buses, the voltage magnitude set point is set
on the bus, not the generator, with bus.v_mag_pu_set since it is a bus property.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此还需设置3、4节点参数如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Bus 3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'v_mag_pu_set'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.10&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Bus 4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'v_mag_pu_set'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.05&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;一致性检查——用于排查潜在错误&lt;/h3&gt;
&lt;p&gt;至此，算例所给的所有参数都用上了，在进行潮流计算前，运行一致性检查：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;consistency_check&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;transformers&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;zero&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;could&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;flow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'T_1'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'object'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;transformers&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;zero&lt;/span&gt; &lt;span class="n"&gt;s_nom&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;impedance&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;thus&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;flow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'T_1'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'object'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;dataframe&lt;/span&gt; &lt;span class="n"&gt;transformers&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;wrong&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'tap_side'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tap_position'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'object'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'attribute'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;They&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt;
&lt;span class="n"&gt;tap_side&lt;/span&gt;        &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;tap_position&lt;/span&gt;    &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
&lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;should&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt;
&lt;span class="n"&gt;tap_side&lt;/span&gt;        &lt;span class="n"&gt;int32&lt;/span&gt;
&lt;span class="n"&gt;tap_position&lt;/span&gt;    &lt;span class="n"&gt;int32&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;dataframe&lt;/span&gt; &lt;span class="n"&gt;generators&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;wrong&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'min_up_time'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'min_down_time'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'initial_status'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'object'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'attribute'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;They&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt;
&lt;span class="n"&gt;min_up_time&lt;/span&gt;       &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;min_down_time&lt;/span&gt;     &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;initial_status&lt;/span&gt;    &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
&lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;should&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt;
&lt;span class="n"&gt;min_up_time&lt;/span&gt;       &lt;span class="n"&gt;int32&lt;/span&gt;
&lt;span class="n"&gt;min_down_time&lt;/span&gt;     &lt;span class="n"&gt;int32&lt;/span&gt;
&lt;span class="n"&gt;initial_status&lt;/span&gt;    &lt;span class="n"&gt;int32&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;有几条&lt;code&gt;warning&lt;/code&gt;，我们能处理的是第二条，这关系的到潮流计算的正确性，至于其他，暂时先不予理会。(&lt;em&gt;其实在写这篇文章时Dawn也还不知道其他&lt;code&gt;warning&lt;/code&gt;会有什么影响&lt;/em&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#warning处理：设置变压器基准功率&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transformers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s_nom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;
&lt;span class="c1"&gt;#计算潮流&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Slack&lt;/span&gt; &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;Bus&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Performing&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;flow&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;AC&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="n"&gt;SubNetwork&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;snapshots&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'now'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'object'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Newton&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Raphson&lt;/span&gt; &lt;span class="n"&gt;solved&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;0.015626&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;





&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'n_iter'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;
 &lt;span class="n"&gt;now&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'error'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                 &lt;span class="mi"&gt;0&lt;/span&gt;
 &lt;span class="n"&gt;now&lt;/span&gt;  &lt;span class="mf"&gt;1.104187&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'converged'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;         &lt;span class="mi"&gt;0&lt;/span&gt;
 &lt;span class="n"&gt;now&lt;/span&gt;  &lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;结果&lt;/h3&gt;
&lt;p&gt;然后显示出结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#各节点功率&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses_t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table class="dataframe"&gt;
&lt;thead&gt;
&lt;tr style="text-align: right;"&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Bus 1&lt;/th&gt;
&lt;th&gt;Bus 2&lt;/th&gt;
&lt;th&gt;Bus 3&lt;/th&gt;
&lt;th&gt;Bus 4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;now&lt;/th&gt;
&lt;td&gt;-0.3&lt;/td&gt;
&lt;td&gt;-0.55&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;td&gt;0.367883&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses_t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table class="dataframe"&gt;
&lt;thead&gt;
&lt;tr style="text-align: right;"&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Bus 1&lt;/th&gt;
&lt;th&gt;Bus 2&lt;/th&gt;
&lt;th&gt;Bus 3&lt;/th&gt;
&lt;th&gt;Bus 4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;now&lt;/th&gt;
&lt;td&gt;-0.18&lt;/td&gt;
&lt;td&gt;-0.13&lt;/td&gt;
&lt;td&gt;0.093411&lt;/td&gt;
&lt;td&gt;0.264698&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#各线路功率&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lines_t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;p0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table class="dataframe"&gt;
&lt;thead&gt;
&lt;tr style="text-align: right;"&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Line 1-2&lt;/th&gt;
&lt;th&gt;Line 1-4&lt;/th&gt;
&lt;th&gt;Line 2-4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;now&lt;/th&gt;
&lt;td&gt;0.246244&lt;/td&gt;
&lt;td&gt;-0.046244&lt;/td&gt;
&lt;td&gt;-0.31001&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#各母线电压幅值&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses_t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v_mag_pu&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table class="dataframe"&gt;
&lt;thead&gt;
&lt;tr style="text-align: right;"&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Bus 1&lt;/th&gt;
&lt;th&gt;Bus 2&lt;/th&gt;
&lt;th&gt;Bus 3&lt;/th&gt;
&lt;th&gt;Bus 4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;now&lt;/th&gt;
&lt;td&gt;0.984675&lt;/td&gt;
&lt;td&gt;0.964798&lt;/td&gt;
&lt;td&gt;1.1&lt;/td&gt;
&lt;td&gt;1.05&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#各母线电压相角，转换为角度制表示&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses_t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v_ang&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table class="dataframe"&gt;
&lt;thead&gt;
&lt;tr style="text-align: right;"&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Bus 1&lt;/th&gt;
&lt;th&gt;Bus 2&lt;/th&gt;
&lt;th&gt;Bus 3&lt;/th&gt;
&lt;th&gt;Bus 4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;now&lt;/th&gt;
&lt;td&gt;-0.500171&lt;/td&gt;
&lt;td&gt;-6.450304&lt;/td&gt;
&lt;td&gt;6.732349&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2&gt;小结&lt;/h2&gt;
&lt;p&gt;以上用一个算例对PyPSA进行了简单介绍，PyPSA还带有一个基于Web的图形界面，效果同样不错，具体可以看看&lt;a href="https://www.pypsa.org/animations/pypsa-eur-30/"&gt;这个演示&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;除了潮流计算，PyPSA还能进行最优潮流规划(OPF)，更多请参见官方文档&lt;/p&gt;
&lt;p&gt;PyPSA的设计比较好，接口清晰，文档完善，不过这个包仍在开发当中，尚不能进行短路计算。&lt;/p&gt;
&lt;h2&gt;参考文献&lt;/h2&gt;
&lt;p&gt;1.何仰赞，温增银.电力系统分析(下)(第四版).武汉：华中科技大学出版社,2016.&lt;/p&gt;
&lt;p&gt;2.PyPSA参考文档：https://www.pypsa.org/doc/&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="python"></category><category term="power system"></category></entry><entry><title>pelican建站小记</title><link href="https://Black-Web.github.io/pelican_sitebuild_record.html" rel="alternate"></link><published>2018-04-20T13:00:00+08:00</published><updated>2018-04-20T13:00:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2018-04-20:/pelican_sitebuild_record.html</id><summary type="html">&lt;p&gt;很早之前就有了建立个人网站的想法，曾经尝试过django、wordpress，觉得django太繁...直到遇到了pelican。&lt;/p&gt;</summary><content type="html">&lt;h1&gt;pelican建站小记&lt;/h1&gt;
&lt;p&gt;很早之前就有了建立个人网站的想法，Dawn并非IT行业的人，曾经尝试过django、wordpress，觉得django太繁，wordpress虽然很好，但总觉得太傻瓜化了，而且是php写的，不是博主所熟悉的python。&lt;/p&gt;
&lt;p&gt;直到遇到了pelican。&lt;/p&gt;
&lt;h2&gt;pelican 功能简介&lt;/h2&gt;
&lt;p&gt;下面是从pelican主页上摘下来的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chronological content (e.g., articles, blog posts) as well as static pages&lt;/li&gt;
&lt;li&gt;Integration with external services (e.g., Google Analytics and Disqus)&lt;/li&gt;
&lt;li&gt;Site themes (created using Jinja2 templates)&lt;/li&gt;
&lt;li&gt;Publication of articles in multiple languages&lt;/li&gt;
&lt;li&gt;Generation of Atom and RSS feeds&lt;/li&gt;
&lt;li&gt;Syntax highlighting via Pygments&lt;/li&gt;
&lt;li&gt;Importing existing content from WordPress, Dotclear, and other services&lt;/li&gt;
&lt;li&gt;Fast rebuild times due to content caching and selective output writing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于个人博客而言，足够好用了。而且还支持markdown，配上插件还能把jupyter notebook转换成网页；最重要的是，整条工具链都是python，不必触及其他，减小了学习成本，简直完美。&lt;/p&gt;
&lt;p&gt;以下内容主要参考了&lt;a href="https://www.dataquest.io/blog/how-to-setup-a-data-science-blog/"&gt;Building a Data Science Portfolio: Setting Up a Blog&lt;/a&gt;，内容还是很详细的。&lt;/p&gt;
&lt;h2&gt;折腾的过程1 -- 使用pelican&lt;/h2&gt;
&lt;h3&gt;Prequisite|一些前置准备&lt;/h3&gt;
&lt;p&gt;由于不打算写成教程，本文只记录一些关键点。&lt;/p&gt;
&lt;p&gt;要用到的工具软件有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;git -- 站点暂时放在GitHub上，顺带还能利用一下版本控制。&lt;/li&gt;
&lt;li&gt;pelican -- 感觉这个才应该放在第一个，如本文标题所述。&lt;/li&gt;
&lt;li&gt;ghp-import -- 用于将生成的网页提交到master分支&lt;/li&gt;
&lt;li&gt;pelican-ipynb -- 一个用于将jupyter notebook转换为网页的插件&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;quick_start&lt;/h3&gt;
&lt;p&gt;新建目录&lt;code&gt;blog&lt;/code&gt;,在&lt;code&gt;blog&lt;/code&gt;下命令行运行&lt;code&gt;pelican-quickstart&lt;/code&gt;,这时pelican会对要建立的网站进行一系列询问，只在下面的问题下选&lt;code&gt;n&lt;/code&gt;，其余一路回车键接受默认设置。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Do you want to specify a URL prefix? e.g., http://example.com&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;然后&lt;code&gt;git init&lt;/code&gt;初始化仓库，进行版本控制。&lt;/p&gt;
&lt;h3&gt;插件安装和配置&lt;/h3&gt;
&lt;p&gt;新建目录&lt;code&gt;plugins&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;运行&lt;code&gt;git submodule add git://github.com/danielfrg/pelican-ipynb.git plugins/ipynb&lt;/code&gt;来安装pelican-ipynb插件。&lt;/p&gt;
&lt;p&gt;打开&lt;code&gt;pelicanconf.py&lt;/code&gt;，在末尾加入以下内容来启用插件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;MARKUP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'md'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ipynb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;PLUGIN_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'./plugins'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'ipynb.markup'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;写一篇博文&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录下新建一个&lt;code&gt;.ipynb&lt;/code&gt;文档，同时新建一个&lt;code&gt;.ipynb-meta&lt;/code&gt;来保存元信息。&lt;/p&gt;
&lt;p&gt;接下来就是编辑文档和元信息了。&lt;/p&gt;
&lt;h3&gt;转换为html&lt;/h3&gt;
&lt;p&gt;回到blog目录下，运行&lt;code&gt;pelican content&lt;/code&gt;，这会创建&lt;code&gt;output&lt;/code&gt;文件夹，里面是html网页文件。&lt;/p&gt;
&lt;p&gt;切换到&lt;code&gt;output&lt;/code&gt;文件夹下，运行&lt;code&gt;python -m pelican.server&lt;/code&gt;。就可以在本地&lt;code&gt;8000&lt;/code&gt;端口访问的到刚刚生成的网页了。&lt;/p&gt;
&lt;p&gt;但是目前还只能用于本地访问，主要是作调试用途。&lt;/p&gt;
&lt;h2&gt;折腾的过程2 -- 部署到GitHub&lt;/h2&gt;
&lt;p&gt;这一步卡了很久，是因为部署本地网页到服务器是全新的内容，之前没有接触过。&lt;/p&gt;
&lt;h3&gt;GitHub Pages&lt;/h3&gt;
&lt;p&gt;得益于&lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;服务，暂时不需要购买服务器和域名，GitHub Pages会把名为&lt;code&gt;username.github.io&lt;/code&gt;仓库的master分支渲染为网页，前提是仓库里存在html网页。&lt;/p&gt;
&lt;p&gt;首先需要在GitHub上建立一个名为&lt;code&gt;username.github.io&lt;/code&gt;结尾的仓库，以本博客为例，即&lt;code&gt;black-web.github.io&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然后运行&lt;code&gt;git remote add origin git@github.com:username/username.github.io.git&lt;/code&gt;来建立本地仓库和远程仓库的链接。&lt;/p&gt;
&lt;p&gt;接下来打开&lt;code&gt;publishconf.py&lt;/code&gt;,把&lt;code&gt;SITEURL&lt;/code&gt;设置为&lt;code&gt;http://username.github.io&lt;/code&gt;。同上一步一样，username需要改成GitHub用户名。&lt;/p&gt;
&lt;p&gt;再运行&lt;code&gt;pelican content -s publishconf.py&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;当只需要在本地预览时，运行&lt;code&gt;pelican content&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;而需要将网站部署到服务器时，运行&lt;code&gt;pelican content -s publishconf.py&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;提交和部署&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git checkout -b dev&lt;/code&gt;建立并切换到新dev分支下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;master分支才会被GitHub Pages渲染，所以需要建立一个dev分支来保存pelican的运行环境，而master分支则用来存储网页内容，另外，gh-import给两个分支的转换带来了极大的方便。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;运行&lt;code&gt;ghp-import output -b master&lt;/code&gt;会将&lt;code&gt;output&lt;/code&gt;目录下的内容commit到master分支。&lt;/p&gt;
&lt;p&gt;然后&lt;code&gt;git push master origin&lt;/code&gt;把master分支推送到GitHub。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;dev分支可以只保留在本地&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;访问&lt;a href="https://black-web.github.io/"&gt;black-web.github.io&lt;/a&gt;，内容呈现出来，所有的折腾换来这一刻的喜悦。&lt;/p&gt;
&lt;p&gt;到这里，整个过程就结束了。&lt;/p&gt;
&lt;h2&gt;notable|重点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;当只需要在本地预览时，运行&lt;code&gt;pelican content&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;而需要将网站部署到服务器时，运行&lt;code&gt;pelican content -s publishconf.py&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;master分支才会被GitHub Pages渲染，所以需要建立一个dev分支来保存pelican的运行环境，而master分支则用来存储网页内容，另外，gh-import给两个分支的转换带来了极大的方便。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;futher work|进一步的折腾&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;pelican的更高级的用法，比如主题、其他插件、评论系统等等&lt;/li&gt;
&lt;li&gt;最重要的当然还是发post了&lt;/li&gt;
&lt;/ul&gt;</content><category term="python"></category><category term="pelican"></category></entry></feed>