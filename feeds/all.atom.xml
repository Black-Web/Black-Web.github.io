<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dawn's博客</title><link href="https://Black-Web.github.io/" rel="alternate"></link><link href="https://Black-Web.github.io/feeds/all.atom.xml" rel="self"></link><id>https://Black-Web.github.io/</id><updated>2019-03-28T00:00:00+08:00</updated><subtitle>脚踏实地，追求真理</subtitle><entry><title>是风动？幡动？还是心动？</title><link href="https://Black-Web.github.io/linearalgebraandaxistransform.html" rel="alternate"></link><published>2019-03-28T00:00:00+08:00</published><updated>2019-03-28T00:00:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2019-03-28:/linearalgebraandaxistransform.html</id><summary type="html">&lt;h1&gt;线性代数与坐标变换&lt;/h1&gt;
&lt;p&gt;其实是坐标轴在动。&lt;/p&gt;
&lt;h1&gt;待补充&lt;/h1&gt;</summary><content type="html">&lt;h1&gt;线性代数与坐标变换&lt;/h1&gt;
&lt;p&gt;其实是坐标轴在动。&lt;/p&gt;
&lt;h1&gt;待补充&lt;/h1&gt;</content><category term="解析几何"></category><category term="线性代数"></category><category term="椭圆"></category></entry><entry><title>把椭圆扶正</title><link href="https://Black-Web.github.io/rectifytheellipse.html" rel="alternate"></link><published>2019-03-28T00:00:00+08:00</published><updated>2019-03-28T00:00:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2019-03-28:/rectifytheellipse.html</id><summary type="html">&lt;div style="text-align:center;color:rgba(0,0,0,.3)"&gt;本文禁止转载&lt;/div&gt;
&lt;h1&gt;把椭圆扶正&lt;/h1&gt;
&lt;p&gt;最近遇到两个相互垂直的简谐运动叠加的问题，运用线性代数坐标变换可以&lt;s&gt;完美&lt;/s&gt;解决。&lt;/p&gt;
&lt;h2&gt;画一个椭圆 -- 互相垂直的同频振荡&lt;/h2&gt;
&lt;p&gt;设想有一个小球同时在x,y两个方向上运动，并且x,y方向上的位移满足参数方程：&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{aligned}
x&amp;amp;=A_1\cos(\omega t+\delta_1)\\
 &amp;amp;=A_1(\cos\omega t \cos\delta_1-\sin\omega t\sin\delta_1)
 \tag{1}
\end{aligned}
 $$&lt;/div&gt;
&lt;div class="math"&gt;$$\begin{aligned}
y&amp;amp;=A_2\cos(\omega t+\delta_2)\\
 &amp;amp;=A_2(\cos\omega t \cos\delta_2-\sin …&lt;/div&gt;</summary><content type="html">&lt;div style="text-align:center;color:rgba(0,0,0,.3)"&gt;本文禁止转载&lt;/div&gt;
&lt;h1&gt;把椭圆扶正&lt;/h1&gt;
&lt;p&gt;最近遇到两个相互垂直的简谐运动叠加的问题，运用线性代数坐标变换可以&lt;s&gt;完美&lt;/s&gt;解决。&lt;/p&gt;
&lt;h2&gt;画一个椭圆 -- 互相垂直的同频振荡&lt;/h2&gt;
&lt;p&gt;设想有一个小球同时在x,y两个方向上运动，并且x,y方向上的位移满足参数方程：&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{aligned}
x&amp;amp;=A_1\cos(\omega t+\delta_1)\\
 &amp;amp;=A_1(\cos\omega t \cos\delta_1-\sin\omega t\sin\delta_1)
 \tag{1}
\end{aligned}
 $$&lt;/div&gt;
&lt;div class="math"&gt;$$\begin{aligned}
y&amp;amp;=A_2\cos(\omega t+\delta_2)\\
 &amp;amp;=A_2(\cos\omega t \cos\delta_2-\sin\omega t\sin\delta_2)
 \tag{2}
\end{aligned}
$$&lt;/div&gt;
&lt;p&gt;那么这个小球的运动轨迹是怎样的呢？为了回答这个问题，从以上两式中消去时间变量&lt;span class="math"&gt;\(t\)&lt;/span&gt;：&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\((1)\div A_1\times \cos\delta_2\)&lt;/span&gt;得到：
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{x}{A_1}\cos\delta_2=\cos\omega t\cos\delta_1\cos\delta_2-\sin\omega t\sin\delta_1\cos\delta_2 
\tag{3}
$$&lt;/div&gt;
&lt;p&gt;&lt;span class="math"&gt;\((2)\div A_2\times \cos\delta_1\)&lt;/span&gt;得到：
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{y}{A_2}\cos\delta_1=\cos\omega t\cos\delta_2\cos\delta_1-\sin\omega t\sin\delta_2\cos\delta_1
\tag{4}
$$&lt;/div&gt;
&lt;p&gt;
&lt;span class="math"&gt;\((3)-(4)\)&lt;/span&gt;：
&lt;/p&gt;
&lt;div class="math"&gt;$$\frac{x}{A_1}\cos\delta_2-\frac{y}{A_2}\cos\delta_1=\sin\omega t \sin(\delta_2-\delta_1)
\tag{5}
$$&lt;/div&gt;
&lt;p&gt;同理，交错乘以&lt;span class="math"&gt;\(\sin\delta_2\)&lt;/span&gt;和&lt;span class="math"&gt;\(\sin\delta_1\)&lt;/span&gt;并相减后得到：&lt;/p&gt;
&lt;div class="math"&gt;$$\frac{x}{A_1}\sin\delta_2-\frac{y}{A_2}\sin\delta_1=\cos\omega t \sin(\delta_2-\delta_1)
\tag{6}
$$&lt;/div&gt;
&lt;p&gt;
再将&lt;span class="math"&gt;\((5)、(6)\)&lt;/span&gt;式平方相加，化简后得到：
&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{x^2}{A_1^2}+\frac{y^2}{A_2^2}-2\frac{xy}{A_1A_2}\cos(\delta_2-\delta_1)=\sin^2(\delta_2-\delta_1) \tag{7}$$&lt;/div&gt;
&lt;p&gt;
这便得到了消去时间变量后的曲线方程，它是一个关于&lt;span class="math"&gt;\(x\)&lt;/span&gt;、&lt;span class="math"&gt;\(y\)&lt;/span&gt;的二次曲线，在&lt;span class="math"&gt;\(\delta_2\ne\delta_1\)&lt;/span&gt;时可能有抛物线、双曲线、椭圆三种情况，观察式&lt;span class="math"&gt;\((1)\)&lt;/span&gt;、&lt;span class="math"&gt;\((2)\)&lt;/span&gt;可知&lt;span class="math"&gt;\(x\)&lt;/span&gt;、&lt;span class="math"&gt;\(y\)&lt;/span&gt;均不会到无穷大，可以断定是椭圆，中心在原点。并且，如果&lt;span class="math"&gt;\(\delta_2-\delta_1\ne k\cdot\frac{\pi}{2}\)&lt;/span&gt;，这个椭圆的对称轴不会落在坐标轴上，是一个斜着的椭圆。&lt;/p&gt;
&lt;h2&gt;坐标轴旋转&lt;/h2&gt;
&lt;p&gt;接下来的问题是，这个椭圆的倾斜角是怎样的？&lt;/p&gt;
&lt;p&gt;可以选择适当的坐标旋转变换，使椭圆在新坐标系下关于坐标轴对称，从方程上看，是要使变换后的xy交叉项消掉，关于坐标变换的总结，&lt;a href="/linearalgebraandaxistransform"&gt;另有成文&lt;/a&gt;。这里直接给出旋转角&lt;span class="math"&gt;\(\alpha\)&lt;/span&gt;应满足的关系：&lt;/p&gt;
&lt;div class="math"&gt;$$ \tan2\alpha = \frac{2A_1A_2}{A_1^2A_2^2}\cos(\delta_2 -\delta_1)\tag{8}$$&lt;/div&gt;
&lt;p&gt;可以猜测根据此关系式能得到4个满足条件的&lt;span class="math"&gt;\(\alpha\)&lt;/span&gt;，且互差&lt;span class="math"&gt;\(\frac{\pi}{2}\)&lt;/span&gt;。&lt;/p&gt;
&lt;h2&gt;特征值与轴长的关系&lt;/h2&gt;
&lt;p&gt;那么椭圆的长半轴、短半轴又是多少？&lt;/p&gt;
&lt;p&gt;至少有两种求解方法，一是利用上面得到的旋转角度，写出新坐标系下的椭圆方程得到；二是直接使用拉格朗日乘子法求解函数&lt;span class="math"&gt;\(x^2+y^2\)&lt;/span&gt;的最值。第二种方法运算量也许小些。&lt;/p&gt;
&lt;p&gt;这里使用实对称矩阵的特征值法解决。&lt;/p&gt;
&lt;p&gt;式&lt;span class="math"&gt;\((7)\)&lt;/span&gt;是一个二次型，令&lt;span class="math"&gt;\(\Delta=\delta_2 -\delta_1\)&lt;/span&gt;，该二次型矩阵为：&lt;/p&gt;
&lt;div class="math"&gt;$$ \textbf{A}=\left[\begin{matrix}\frac{1}{A_{1}^{2} \sin^{2}{\left (\Delta \right )}} &amp;amp; - \frac{\cos{\left (\Delta \right )}}{A_{1} A_{2} \sin^{2}{\left (\Delta \right )}}\\- \frac{\cos{\left (\Delta \right )}}{A_{1} A_{2} \sin^{2}{\left (\Delta \right )}} &amp;amp; \frac{1}{A_{2}^{2} \sin^{2}{\left (\Delta \right )}}\end{matrix}\right] \tag{9}$$&lt;/div&gt;
&lt;p&gt;由线性代数理论知道，存在正交变换&lt;span class="math"&gt;\([x,y]^T=\textbf{P} \cdot [X,Y]^T\)&lt;/span&gt;，使二次型化为标准型，设特征值为&lt;span class="math"&gt;\(\lambda_1\)&lt;/span&gt;、&lt;span class="math"&gt;\(\lambda_2\)&lt;/span&gt;，则该变换使方程化为&lt;span class="math"&gt;\(\lambda_1X^2+\lambda_2Y^2=1\)&lt;/span&gt;，容易知道长半轴和短半轴为&lt;span class="math"&gt;\(\frac{1}{\sqrt{\lambda_1}}\)&lt;/span&gt;、&lt;span class="math"&gt;\(\frac{1}{\sqrt{\lambda_1}}\)&lt;/span&gt;。其形式略显复杂。&lt;/p&gt;
&lt;p&gt;这种方法运算量也不小。&lt;/p&gt;
&lt;p&gt;如果反过来要求在已知长短半轴和椭圆倾斜角的情况下，求两个方向上的简谐运动参数，使用以上方法将异常复杂。&lt;/p&gt;
&lt;h2&gt;小结&lt;/h2&gt;
&lt;p&gt;执意使用笛卡尔坐标系的代价是运算量大和表达式形式复杂，并且消去时间变量后无法得知小球旋转的方向。需要变通。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="解析几何"></category><category term="偏振"></category><category term="椭圆"></category></entry><entry><title>一语分类还没有准备好</title><link href="https://Black-Web.github.io/yi-yu-fen-lei-huan-mei-you-zhun-bei-hao.html" rel="alternate"></link><published>2019-03-28T00:00:00+08:00</published><updated>2019-03-28T00:00:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2019-03-28:/yi-yu-fen-lei-huan-mei-you-zhun-bei-hao.html</id><summary type="html">&lt;h1&gt;test doc&lt;/h1&gt;
&lt;p&gt;this is a test document.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;test doc&lt;/h1&gt;
&lt;p&gt;this is a test document.&lt;/p&gt;</content></entry><entry><title>压不垮我的，终将使我更强大</title><link href="https://Black-Web.github.io/thosedontkillmemakesmestronger.html" rel="alternate"></link><published>2019-03-19T00:00:00+08:00</published><updated>2019-03-19T00:00:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2019-03-19:/thosedontkillmemakesmestronger.html</id><summary type="html">&lt;div style="text-align:center;color:rgba(0,0,0,.3)"&gt;本文禁止转载&lt;/div&gt;
&lt;h1&gt;压不垮我的，终将使我更强大 -- 考研总结&lt;/h1&gt;
&lt;p&gt;2019考研路途终于走到了终点，尽头开遍了喜悦的鲜花。&lt;/p&gt;
&lt;h2&gt;初试 -- 沉下心来，方有洞天&lt;/h2&gt;
&lt;p&gt;在最初决定考研的时候，目标是西南交大，一是四川有亲戚，二是考研成功率更高；但在填写报考信息的前两天，临时决定报考华科，并且是难度最大的电力系，开始了人生中第一次豪赌。改目标的原因很多，主要有：一是得知高中室友有两人保研北大受到刺激；二是当时西南交大电路真题已经做完，复习状态削弱懈怠了很多，而距离初试还有两个多月，我很清楚以那种状态是不可能考得好的；最重要的原因是，心里有种强烈的想法，为什么不尽全力一次试试看呢，我似乎从来没有全力以赴过，高考那时也许行动上尽了全力，但心理上没有。&lt;/p&gt;
&lt;p&gt;最后两个月的复习过程中，痛苦过，煎熬过，十算九错一度让我崩溃，此前我是不屑于计算的，认为思路才是王道。“现在都算不对，总不可能期望考试的时候再算对吧。”、“只有菜鸡才觉得这叫运算量。”我这样对自己说。事实证明，只有实实在在算过一遍才能悟出技巧。虽然考数学时运算还是出了问题，但已经得到了控制。&lt;/p&gt;
&lt;p&gt;真正让人头大的是政治，考前背题背到想吐，没有别的办法，只能强迫自己背下去；一遍又一遍读那些根本无法理解的句子，区分一个个意思相近的名词 …&lt;/p&gt;</summary><content type="html">&lt;div style="text-align:center;color:rgba(0,0,0,.3)"&gt;本文禁止转载&lt;/div&gt;
&lt;h1&gt;压不垮我的，终将使我更强大 -- 考研总结&lt;/h1&gt;
&lt;p&gt;2019考研路途终于走到了终点，尽头开遍了喜悦的鲜花。&lt;/p&gt;
&lt;h2&gt;初试 -- 沉下心来，方有洞天&lt;/h2&gt;
&lt;p&gt;在最初决定考研的时候，目标是西南交大，一是四川有亲戚，二是考研成功率更高；但在填写报考信息的前两天，临时决定报考华科，并且是难度最大的电力系，开始了人生中第一次豪赌。改目标的原因很多，主要有：一是得知高中室友有两人保研北大受到刺激；二是当时西南交大电路真题已经做完，复习状态削弱懈怠了很多，而距离初试还有两个多月，我很清楚以那种状态是不可能考得好的；最重要的原因是，心里有种强烈的想法，为什么不尽全力一次试试看呢，我似乎从来没有全力以赴过，高考那时也许行动上尽了全力，但心理上没有。&lt;/p&gt;
&lt;p&gt;最后两个月的复习过程中，痛苦过，煎熬过，十算九错一度让我崩溃，此前我是不屑于计算的，认为思路才是王道。“现在都算不对，总不可能期望考试的时候再算对吧。”、“只有菜鸡才觉得这叫运算量。”我这样对自己说。事实证明，只有实实在在算过一遍才能悟出技巧。虽然考数学时运算还是出了问题，但已经得到了控制。&lt;/p&gt;
&lt;p&gt;真正让人头大的是政治，考前背题背到想吐，没有别的办法，只能强迫自己背下去；一遍又一遍读那些根本无法理解的句子，区分一个个意思相近的名词。&lt;/p&gt;
&lt;p&gt;&lt;img alt="读英语和背政治时的风景--南大信工楼E区" src="images/chendu.jpg"/&gt;
&lt;img alt="读英语和背政治时的风景--南大信工楼E区" src="images/xingongloufengjin.jpg"/&gt;&lt;/p&gt;
&lt;div style="text-align: center;padding:0"&gt;读英语和背政治时的风景--南大信工楼E区&lt;/div&gt;
&lt;h2&gt;复试 -- 不骄不躁，方得始终&lt;/h2&gt;
&lt;p&gt;华科的复试成绩占最终成绩的40%，非常重要，复试又分为笔试、英语测试、专业面试，按4:2:4计入复试成绩。初试成绩出来后，根据群里统计，我的电力系单方向排名为22，按照以往招生人数，这是无法进入电力系的，联系导师方面，导师都是表示名额已满。所以决定调剂，但问题是此时不确定要往那个方向调，复习也很盲目，电力电子、电磁场、电机学、自动控制理论课本都翻了翻，却都无法静下心来深入某一门课程。比初试更可怕的是不知道往哪个方向使劲。这里非常感谢一位朋友@月半王民，让我集中精力准备电分笔试。虽然不知道电分得了多少分，但从复试成绩来看，分数应该不低。&lt;/p&gt;
&lt;p&gt;面试的时候，大脑和正常时候的反应不太相同，面试完就找不着北了，一直在回想面试的细节，越想越觉得凉了，很基本的电路理论没有答好，电机答得稀烂，自以为得意的Python编程因为缺乏解释可能被误解，综合下来，我想老师对我的评价大概会是：基础极其糟糕，编程一窍不通，自大不懂装懂，除了英语一无是处。&lt;/p&gt;
&lt;p&gt;越想心里就越忐忑，复试出成绩那天下午，坐在电气大楼附近青年园的长椅上，周围的环境很雅致，林木稀疏排布，小路曲径通幽，不同的鸟唤声和它们翅膀拍打的声音此起彼伏；这些都不足以平复内心的焦灼和不安，一方面期待成绩快些公布，另一方面害怕所担心的事真的发生。待群里有人发了几张模糊的公示名单，大致扫了一下没有找到我的名字，口干舌燥走进电气大楼，就算被淘汰也要亲眼看到结果。复试成绩87.6，全日制学硕待录取；我反复确认这一行，生怕看错，确认了几次后，心里拧紧的什么东西渐渐松开了，最后呼出了一口气。&lt;/p&gt;
&lt;h2&gt;结语&lt;/h2&gt;
&lt;p&gt;考研一路走来，很多迷惘，很多汗水，很多个虫鸣的夜晚，很多个探头的朝阳。考研好比一场博弈，以时光为赌注，也像一次洗礼，除了获得能力的提升，还将锤炼出更强大的内心。&lt;/p&gt;
&lt;p&gt;感谢我的家人，感谢那些以任何方式关心、鼓励、帮助过我的人。&lt;/p&gt;
&lt;div style="text-align: right"&gt;
Dawn
&lt;/div&gt;
&lt;hr/&gt;
&lt;h2&gt;附：复试经验 -- 给2020考华科的学弟学妹&lt;/h2&gt;
&lt;p&gt;今年考研落下帷幕，期间心态起伏，个中悲喜，各不相同，有人高分复试被刷，有人低分成功逆袭。写下这篇复试经验总结，如果能帮到学弟学妹，最好不过。&lt;/p&gt;
&lt;p&gt;初试考完估分380+，查成绩后402，心想这就稳了，等群里统计结果，400分以上的有50多人，心态马上变了，有书读就行。今年分数爆炸的原因总结起来有三条：一是去年数学难，把很多人留到了今年二战；二是今年数学容易，总体分数上涨；三是电路极简单，简直不像华科的题。三条原因，两条与数学有关，其重要性可见一斑。&lt;/p&gt;
&lt;p&gt;今年划线380，但实际上380-385只能参加非全日制的复试，与我同行的同学不幸恰在这一分数段，很是惋惜。&lt;/p&gt;
&lt;p&gt;复试报名是从高分的同学开始，一个一个填，主要注意笔试科目和复试系所的选择，每个系按1：1.2人数进入复试，名额填满后不再接受后续填报，并且如果初试单方向排名在该系所的计划招生人数以内，不能调出到其他方向。&lt;/p&gt;
&lt;p&gt;我初试报的电力系，复试笔试选的电分，调剂到应用电磁工程研究所。&lt;/p&gt;
&lt;p&gt;最先开始的是笔试，电分今年的题似乎有点异样，个别题目和刺猬哥的电分序列上的题不太一样。个人认为复习好电分序列足以覆盖到同类型考题的90%。&lt;/p&gt;
&lt;p&gt;接着是面试，今年电磁所的英语面试和专业面试同时进行，每人20分钟（第一第二名好像有30分钟），没有听力但是其他系所是有的，先是一个英文的自我介绍，然后老师针对自我介绍的内容提问。我说自己对数学和编程感兴趣，自学了Python，老师就让我描述Python作为脚本语言的特性，并谈了谈如何结合C和Python的优势。另一位老师则问我既然对数学感兴趣，为什么初试数学分不高——我的数学确实炸了，回答说发挥不好，所幸我的高数上下册都是90+，应该是打消了老师的疑虑，大家说这种话之前一定要打草稿（我好像没有打）。以上英语面试结束。&lt;/p&gt;
&lt;p&gt;接着让我写一个小程序实现一个级数求和公式：&lt;span class="math"&gt;\(\Sigma_{n＝1}^Na_nx^n\)&lt;/span&gt;，我一开始写的老师说性能不高，看看能不能提高计算效率，我有点慌，经过老师提示还是没写出来，但是最后说了一下思路。&lt;/p&gt;
&lt;p&gt;我感觉到这里就是我复试被录取的全部原因了，后面表现得很烂，我觉得自己属于剑走偏锋，这里总结3条我的加分项：1. 英语口语贼好；2. 写程序时表现得很熟练；3. 听说长得帅有加分（手动划掉）。以上三条，皆需要一定的功底，万万不可轻易模仿。&lt;/p&gt;
&lt;p&gt;接下来电机老师问了几个问题：简述感应电机和同步电机的特点，异同；感应电机的机械特性是什么；机械特性曲线是怎样的。我错把机械特性弄成了转速特性，这是我面试后担心的一点。&lt;/p&gt;
&lt;p&gt;可能是看我基础不太行，问我更基础的电路题：RL串联电路，0时刻合上直流电源，画出电流波形；把电源换成正弦交流呢？再把电感换成电容呢？我当时只答对了第一个和第三个问题，第二个犯了错误，一直在纠结初相位问题，但老师关心的是波形幅值的变化趋势，我迟迟答不出来，似乎因为时间快没了，几个老师的声音同时响起，我最后竟犯了个严重错误，说最终幅值由U/R决定（应该是U/Z）。面试就这样结束了。&lt;/p&gt;
&lt;p&gt;我曾一度担心表现得像是没有丝毫专业基础而被刷，后来成绩公布时复试分数还挺高。复试三个环节，笔试是唯一有掌控感的，面试老师看重的是思路。&lt;/p&gt;
&lt;p&gt;多说一句，华科电气除了5个传统电气工程二级学科，还有其他3个学科交叉比较多的研究所，因此初试填报的方向往往没用，比如我现在的导师就是电机电器方向的。&lt;/p&gt;
&lt;p&gt;最后祝20的学弟学妹考研成功。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="misc"></category></entry><entry><title>深度学习笔记(Deep Learning With Python 第三章)</title><link href="https://Black-Web.github.io/noteofdlpych3.html" rel="alternate"></link><published>2019-02-14T17:56:00+08:00</published><updated>2019-02-14T17:56:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2019-02-14:/noteofdlpych3.html</id><summary type="html">&lt;h1&gt;《Deep learning with python》学习手记&lt;/h1&gt;
&lt;h2&gt;对深度学习概念的理解&lt;/h2&gt;
&lt;p&gt;深度学习的“深度”是指&lt;code&gt;多层&lt;/code&gt;数据变换（映射），可以认为是多次复合的函数，实现深度学习算法的数据结构被称为神经网络，“学习”实际上用“反馈”或”调整”形容更恰当一点。深度学习算法的输入是原始数据和期望的输出，单次的输出没有意义，必须通过把单次输出与期望输出进行差异对比，通过“反馈”来动态调整网络内各个权重，从而使下一次输出更加接近期望输出，反复调整，最终达到某个理想输出。&lt;/p&gt;
&lt;p&gt;有点类似控制理论中的反馈控制系统，不过是离散形式的。&lt;/p&gt;
&lt;p&gt;误区纠正：如上所说，神经网络是对数据进行层层变换，抽取出数据不同层面的信息，并以权重（weights）区分不同信息对结果的影响程度，&lt;strong&gt;并非仿生学，和生物学中的大脑神经网络没有太大关系&lt;/strong&gt;，如果说早期的人工神经网络是受了生物神经元的连接的启发，那么后来的发展则越来越少地来源于生物，更多的是来自工程实践。&lt;/p&gt;
&lt;h2&gt;深度学习与机器学习&lt;/h2&gt;
&lt;p&gt;深度学习是机器学习的子集，机器学习的主流经历了传统的基于统计的学习(如贝叶斯分类器、logistic回归)，以支持向量机(SVM …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;《Deep learning with python》学习手记&lt;/h1&gt;
&lt;h2&gt;对深度学习概念的理解&lt;/h2&gt;
&lt;p&gt;深度学习的“深度”是指&lt;code&gt;多层&lt;/code&gt;数据变换（映射），可以认为是多次复合的函数，实现深度学习算法的数据结构被称为神经网络，“学习”实际上用“反馈”或”调整”形容更恰当一点。深度学习算法的输入是原始数据和期望的输出，单次的输出没有意义，必须通过把单次输出与期望输出进行差异对比，通过“反馈”来动态调整网络内各个权重，从而使下一次输出更加接近期望输出，反复调整，最终达到某个理想输出。&lt;/p&gt;
&lt;p&gt;有点类似控制理论中的反馈控制系统，不过是离散形式的。&lt;/p&gt;
&lt;p&gt;误区纠正：如上所说，神经网络是对数据进行层层变换，抽取出数据不同层面的信息，并以权重（weights）区分不同信息对结果的影响程度，&lt;strong&gt;并非仿生学，和生物学中的大脑神经网络没有太大关系&lt;/strong&gt;，如果说早期的人工神经网络是受了生物神经元的连接的启发，那么后来的发展则越来越少地来源于生物，更多的是来自工程实践。&lt;/p&gt;
&lt;h2&gt;深度学习与机器学习&lt;/h2&gt;
&lt;p&gt;深度学习是机器学习的子集，机器学习的主流经历了传统的基于统计的学习(如贝叶斯分类器、logistic回归)，以支持向量机(SVM)为主的高维非线性映射分类法，决策树与随机森林，然后是以神经网络为代表的深度学习。&lt;/p&gt;
&lt;h2&gt;张量（tensor）及其基本运算&lt;/h2&gt;
&lt;p&gt;标量（scalar）是0维张量，向量（vector）是一维张量，矩阵（matrix）是2维张量，此外还有更高维的张量。&lt;/p&gt;
&lt;p&gt;张量的加减运算与向量或矩阵的加减相同，是逐元素相加（element wise）。维数不满足运算规则时，适用散布规则（broadcast）。即维数更低的一方升维以满足运算规则，原张量是升维后张量的切片。&lt;/p&gt;
&lt;p&gt;张量的乘除，#待补充&lt;/p&gt;
&lt;h2&gt;神经网络的层&lt;/h2&gt;
&lt;p&gt;神经网络的拓扑结构决定了一个解空间（hypothesis space）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;picking the right network architect is more than an art than science.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;loss function&lt;/h2&gt;
&lt;p&gt;将其翻译为损失函数让人摸不着头脑，目标函数更恰当，是要最小化的函数。虽然对大多数问题已经有较好的标准，但对特定问题，给出合适的loss function可能需要专业的知识。&lt;/p&gt;</content><category term="python"></category><category term="deep-learning"></category></entry><entry><title>深度学习笔记(Deep Learning With Python 第四章)</title><link href="https://Black-Web.github.io/noteofdlpych4.html" rel="alternate"></link><published>2019-02-14T17:56:00+08:00</published><updated>2019-02-14T17:56:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2019-02-14:/noteofdlpych4.html</id><summary type="html">&lt;h1&gt;训练集、验证集和测试集（train_set, validation_set, test_set）&lt;/h1&gt;
&lt;p&gt;这几个概念和&lt;code&gt;参数&lt;/code&gt;、&lt;code&gt;超参数&lt;/code&gt;有关，神经网络训练过程中的参数主要指的是网络的权重矩阵，超参数则是一些与网络结构有关的参数，比如网络层数，训练批数（epoch），甚至激活函数类型。&lt;/p&gt;
&lt;p&gt;训练集用来对&lt;code&gt;参数&lt;/code&gt;进行调整；验证集用来对&lt;code&gt;超参数&lt;/code&gt;进行tuning，通常后者需要人工进行（当然也可以写一个嵌套程序自动化完成）；测试集则用来测试模型在&lt;strong&gt;从未见过的数据上的表现&lt;/strong&gt;。本质上说，除测试集以外的数据（即训练集和验证集）都是用以训练模型的数据。&lt;/p&gt;
&lt;p&gt;当数据量较少时，划分出来的训练集和验证集可能导致训练结果受划分方式的影响（换句话说训练集数据没有代表性），如果没有更多数据可用，解决方法之一是使用K-fold交叉验证。&lt;/p&gt;
&lt;p&gt;K-fold：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;训练集数据必须足够有代表性，一个训练集不具代表性的例子是：在一个识别包含0-9字符的图像的任务中，如果划分的训练集不含字符“8”，而在测试集中包含“8”，那么这就是一个糟糕的划分，训练集数据不包含整体数据集的全部特征，因而神经网络也就没法对全部特征作出区分。&lt;/li&gt;
&lt;li&gt;但对于预测任务，即给出历史数据预测未来变化的任务，&lt;strong&gt;不能&lt;/strong&gt;把数据随意打乱，即不能用带有未来信息的数据去训练模型 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;训练集、验证集和测试集（train_set, validation_set, test_set）&lt;/h1&gt;
&lt;p&gt;这几个概念和&lt;code&gt;参数&lt;/code&gt;、&lt;code&gt;超参数&lt;/code&gt;有关，神经网络训练过程中的参数主要指的是网络的权重矩阵，超参数则是一些与网络结构有关的参数，比如网络层数，训练批数（epoch），甚至激活函数类型。&lt;/p&gt;
&lt;p&gt;训练集用来对&lt;code&gt;参数&lt;/code&gt;进行调整；验证集用来对&lt;code&gt;超参数&lt;/code&gt;进行tuning，通常后者需要人工进行（当然也可以写一个嵌套程序自动化完成）；测试集则用来测试模型在&lt;strong&gt;从未见过的数据上的表现&lt;/strong&gt;。本质上说，除测试集以外的数据（即训练集和验证集）都是用以训练模型的数据。&lt;/p&gt;
&lt;p&gt;当数据量较少时，划分出来的训练集和验证集可能导致训练结果受划分方式的影响（换句话说训练集数据没有代表性），如果没有更多数据可用，解决方法之一是使用K-fold交叉验证。&lt;/p&gt;
&lt;p&gt;K-fold：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;训练集数据必须足够有代表性，一个训练集不具代表性的例子是：在一个识别包含0-9字符的图像的任务中，如果划分的训练集不含字符“8”，而在测试集中包含“8”，那么这就是一个糟糕的划分，训练集数据不包含整体数据集的全部特征，因而神经网络也就没法对全部特征作出区分。&lt;/li&gt;
&lt;li&gt;但对于预测任务，即给出历史数据预测未来变化的任务，&lt;strong&gt;不能&lt;/strong&gt;把数据随意打乱，即不能用带有未来信息的数据去训练模型。&lt;/li&gt;
&lt;li&gt;数据冗余，确保在训练集和测试集上不包含重复的样本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;欠拟合与过拟合（underfitting and overfitting）&lt;/h1&gt;
&lt;p&gt;过拟合是指模型在训练集上表现很好，而在验证集上表现糟糕。欠拟合与之相反。解决过拟合的方式有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减小模型容量，即减小模型层数或每层神经元数量。通常大容量的模型容易导致过拟合。&lt;/li&gt;
&lt;li&gt;加入权重正则化（weight regularization），可以理解为惩罚机制，在loss_function中加入一项与权重数值相关的额外损失，以此限制权重的取值，具体来讲又有：&lt;/li&gt;
&lt;li&gt;L1正则化：额外损失正比于权重的绝对值。&lt;/li&gt;
&lt;li&gt;L2正则化：额外损失正比于权重的平方，也称权重衰减（weight decay）。&lt;/li&gt;
&lt;li&gt;加入drop-out层，在训练期间随机使部分神经元的输出为0（失活），有点像负重训练的意思。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Using machine learning trained on past data to predict the future is making the assumption that the future will behave like the past. That often isn’t the case.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="python"></category><category term="deep-learning"></category></entry><entry><title>同步发电机突然短路的物理分析</title><link href="https://Black-Web.github.io/analysisofshortcirsyncmec.html" rel="alternate"></link><published>2019-02-07T17:00:00+08:00</published><updated>2019-02-07T17:00:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2019-02-07:/analysisofshortcirsyncmec.html</id><summary type="html">&lt;h1&gt;同步发电机突然短路的物理分析&lt;/h1&gt;
&lt;p&gt;短路后的最终状态是一个新的正弦稳态，定子侧将产生对称基頻电流，从分解的角度出发，认为短路一开始就产生这一稳态分量，考虑电枢反应去磁作用，转子侧为满足自身磁链守恒，会产生对应定子基頻分量的直流分量，这一瞬间的励磁电流就大于最终稳态时的励磁电流，因而将逐渐衰减至稳态值，对应的定子基頻电流也将衰减至稳态值，因为是要满足转子磁链守恒，这两个衰减的时间常数由转子回路决定。&lt;/p&gt;
&lt;p&gt;回到定子方面，单一个基頻电流不足以满足定子自身的磁链守恒，必须叠加一个衰减的直流分量，且对于凸极发电机而言，除了直流还要有一个适应于磁阻变化的二倍频衰减分量，相应的，转子将感应出衰减的基頻电流，因为是要满足定子磁链守恒，时间常数由定子回路决定。&lt;/p&gt;
&lt;p&gt;定子电流即发电机输出电流与无穷大系统短路的情况相比有两个不同：
- 一是因电枢反应的存在而导致的基頻衰减电流。
- 二是磁阻周期性变化导致的二倍频分量。&lt;/p&gt;</summary><content type="html">&lt;h1&gt;同步发电机突然短路的物理分析&lt;/h1&gt;
&lt;p&gt;短路后的最终状态是一个新的正弦稳态，定子侧将产生对称基頻电流，从分解的角度出发，认为短路一开始就产生这一稳态分量，考虑电枢反应去磁作用，转子侧为满足自身磁链守恒，会产生对应定子基頻分量的直流分量，这一瞬间的励磁电流就大于最终稳态时的励磁电流，因而将逐渐衰减至稳态值，对应的定子基頻电流也将衰减至稳态值，因为是要满足转子磁链守恒，这两个衰减的时间常数由转子回路决定。&lt;/p&gt;
&lt;p&gt;回到定子方面，单一个基頻电流不足以满足定子自身的磁链守恒，必须叠加一个衰减的直流分量，且对于凸极发电机而言，除了直流还要有一个适应于磁阻变化的二倍频衰减分量，相应的，转子将感应出衰减的基頻电流，因为是要满足定子磁链守恒，时间常数由定子回路决定。&lt;/p&gt;
&lt;p&gt;定子电流即发电机输出电流与无穷大系统短路的情况相比有两个不同：
- 一是因电枢反应的存在而导致的基頻衰减电流。
- 二是磁阻周期性变化导致的二倍频分量。&lt;/p&gt;</content><category term="power system"></category></entry><entry><title>同步发电机绕组间的自感和互感</title><link href="https://Black-Web.github.io/inductionofsyncmec.html" rel="alternate"></link><published>2019-02-07T17:00:00+08:00</published><updated>2019-02-07T17:00:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2019-02-07:/inductionofsyncmec.html</id><summary type="html">&lt;h1&gt;同步发电机绕组间的自感和互感&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;定子绕组的自感和互感&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自感和互感与磁通路的磁导有关，转子每转过 &lt;span class="math"&gt;\(\pi\)&lt;/span&gt; 弧度(电角度)，定子电流磁动势的磁通路径情况就改变一次，故定子绕组的自感和互感以 &lt;span class="math"&gt;\(\pi\)&lt;/span&gt; 为周期。自感总是正数，因三相绕组空间角度互差 120º，互感总是负数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;转子绕组的自感和互感&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因定子对称，转子电流磁动势的磁通路径总是相同，故转子绕组的自感和互感为常数。其中两个阻尼绕组的轴线相互垂直，互感为0。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定、转子绕组间的互感&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑转子绕组电流在定子绕组中产生的磁链，转子每转过 &lt;span class="math"&gt;\(2\pi\)&lt;/span&gt; 弧度，励磁电流磁动势在定子绕组产生的磁链就经过一个周期，由于磁通有方向性，互感有正半周和负半周之分。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align …&lt;/script&gt;</summary><content type="html">&lt;h1&gt;同步发电机绕组间的自感和互感&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;定子绕组的自感和互感&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自感和互感与磁通路的磁导有关，转子每转过 &lt;span class="math"&gt;\(\pi\)&lt;/span&gt; 弧度(电角度)，定子电流磁动势的磁通路径情况就改变一次，故定子绕组的自感和互感以 &lt;span class="math"&gt;\(\pi\)&lt;/span&gt; 为周期。自感总是正数，因三相绕组空间角度互差 120º，互感总是负数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;转子绕组的自感和互感&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因定子对称，转子电流磁动势的磁通路径总是相同，故转子绕组的自感和互感为常数。其中两个阻尼绕组的轴线相互垂直，互感为0。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定、转子绕组间的互感&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑转子绕组电流在定子绕组中产生的磁链，转子每转过 &lt;span class="math"&gt;\(2\pi\)&lt;/span&gt; 弧度，励磁电流磁动势在定子绕组产生的磁链就经过一个周期，由于磁通有方向性，互感有正半周和负半周之分。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="power system"></category></entry><entry><title>电力系统无功补偿和电压调整</title><link href="https://Black-Web.github.io/psa_voltageandinactivepower.html" rel="alternate"></link><published>2019-02-07T17:00:00+08:00</published><updated>2019-02-07T17:00:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2019-02-07:/psa_voltageandinactivepower.html</id><summary type="html">&lt;h1&gt;电力系统无功补偿和电压调整&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;无功需求的来源&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;综合负荷，主要是异步电机&lt;/li&gt;
&lt;li&gt;变压器，包括励磁损耗和空载漏抗损耗&lt;/li&gt;
&lt;li&gt;输电线，高压轻载时可能会成为无功电源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;无功电源&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发电机，同时是唯一的有功来源，调整励磁可使其进相运行(欠励磁)，吸收感性无功&lt;/li&gt;
&lt;li&gt;静电电容器，调节能力较弱，宜作为就地补偿装置&lt;/li&gt;
&lt;li&gt;同步调相机，旋转设备维护困难，已逐步淘汰&lt;/li&gt;
&lt;li&gt;SVG和SVC&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;中枢点电压调整的三种方式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;逆调压：最大负荷时高于额定电压5%，最小负荷时维持额定&lt;/li&gt;
&lt;li&gt;顺调压：最大负荷时不低于1.025倍额定值，最小负荷时不高于1.05倍额定值&lt;/li&gt;
&lt;li&gt;常调压：任何负荷下均高出额定值2%~5%&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;调压措施&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;发电机调压&lt;/li&gt;
&lt;li&gt;变压器分接头调压&lt;/li&gt;
&lt;li&gt;无功补偿调压&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;h1&gt;电力系统无功补偿和电压调整&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;无功需求的来源&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;综合负荷，主要是异步电机&lt;/li&gt;
&lt;li&gt;变压器，包括励磁损耗和空载漏抗损耗&lt;/li&gt;
&lt;li&gt;输电线，高压轻载时可能会成为无功电源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;无功电源&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发电机，同时是唯一的有功来源，调整励磁可使其进相运行(欠励磁)，吸收感性无功&lt;/li&gt;
&lt;li&gt;静电电容器，调节能力较弱，宜作为就地补偿装置&lt;/li&gt;
&lt;li&gt;同步调相机，旋转设备维护困难，已逐步淘汰&lt;/li&gt;
&lt;li&gt;SVG和SVC&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;中枢点电压调整的三种方式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;逆调压：最大负荷时高于额定电压5%，最小负荷时维持额定&lt;/li&gt;
&lt;li&gt;顺调压：最大负荷时不低于1.025倍额定值，最小负荷时不高于1.05倍额定值&lt;/li&gt;
&lt;li&gt;常调压：任何负荷下均高出额定值2%~5%&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;调压措施&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;发电机调压&lt;/li&gt;
&lt;li&gt;变压器分接头调压&lt;/li&gt;
&lt;li&gt;无功补偿调压&lt;/li&gt;
&lt;/ul&gt;</content><category term="power system"></category></entry><entry><title>电力系统有功功率平衡和频率调整</title><link href="https://Black-Web.github.io/psactivepowerandfrequencyadjustment.html" rel="alternate"></link><published>2019-02-07T17:00:00+08:00</published><updated>2019-02-07T17:00:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2019-02-07:/psactivepowerandfrequencyadjustment.html</id><summary type="html">&lt;h1&gt;电力系统有功功率平衡和频率调整&lt;/h1&gt;
&lt;h2&gt;一次调频&lt;/h2&gt;
&lt;p&gt;负荷变化引起频率改变时，发电机组调速器会试图阻止这种频率改变，这种由调速器参与的频率调整称为一次调频。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;负荷的功率-频率静态特性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;局部线性化处理后引入负荷的调节效应系数&lt;span class="math"&gt;\(K_D\)&lt;/span&gt;，其物理意义为：系统频率降低1单位时，负荷的有功需求自动减少&lt;span class="math"&gt;\(K_D\)&lt;/span&gt;个单位。&lt;/p&gt;
&lt;p&gt;对&lt;strong&gt;静态&lt;/strong&gt;的理解：系统状态突变时会经过一个暂态过程，暂态过程结束后进入新的稳态，上述参数即是进入稳态时的参数。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;发电机组的功率-频率静特性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;同样局部线性化处理，引入机组的单位调节功率&lt;span class="math"&gt;\(K_G\)&lt;/span&gt;，其物理意义为：负荷突增时，发电机组以频率下降1单位作代价，换取&lt;span class="math"&gt;\(K_G\)&lt;/span&gt;个单位的额外供给能力。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;电力系统的功率-频率静特性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;将以上两个参数相加，便得电力系统的单位调节功率。&lt;/p&gt;
&lt;p&gt;单位调节功率的倒数称为调差系数δ。其意义为，负荷突然增大1单位有功需求时，频率下降δ个单位可以取得新的供需平衡，需要注意的是负荷的&lt;strong&gt;净有功需求增量&lt;/strong&gt;不是1个单位，原因前已述及，即频率下降时负荷需求自动减小。&lt;/p&gt;
&lt;p&gt;一次调频无法保证频率的长期稳定，难以实现无差调频。&lt;/p&gt;
&lt;h2&gt;二次调频&lt;/h2&gt;
&lt;p&gt;在发电机组调频器参与下的调频称为二次调频，这在图像上体现为机组静特性曲线的平移。&lt;/p&gt;
&lt;p&gt;二次调频可以实现无差调频，即保持频率为额定值。二次调频一般由几个主调频发电厂承担，枯水季为水电厂 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;电力系统有功功率平衡和频率调整&lt;/h1&gt;
&lt;h2&gt;一次调频&lt;/h2&gt;
&lt;p&gt;负荷变化引起频率改变时，发电机组调速器会试图阻止这种频率改变，这种由调速器参与的频率调整称为一次调频。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;负荷的功率-频率静态特性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;局部线性化处理后引入负荷的调节效应系数&lt;span class="math"&gt;\(K_D\)&lt;/span&gt;，其物理意义为：系统频率降低1单位时，负荷的有功需求自动减少&lt;span class="math"&gt;\(K_D\)&lt;/span&gt;个单位。&lt;/p&gt;
&lt;p&gt;对&lt;strong&gt;静态&lt;/strong&gt;的理解：系统状态突变时会经过一个暂态过程，暂态过程结束后进入新的稳态，上述参数即是进入稳态时的参数。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;发电机组的功率-频率静特性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;同样局部线性化处理，引入机组的单位调节功率&lt;span class="math"&gt;\(K_G\)&lt;/span&gt;，其物理意义为：负荷突增时，发电机组以频率下降1单位作代价，换取&lt;span class="math"&gt;\(K_G\)&lt;/span&gt;个单位的额外供给能力。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;电力系统的功率-频率静特性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;将以上两个参数相加，便得电力系统的单位调节功率。&lt;/p&gt;
&lt;p&gt;单位调节功率的倒数称为调差系数δ。其意义为，负荷突然增大1单位有功需求时，频率下降δ个单位可以取得新的供需平衡，需要注意的是负荷的&lt;strong&gt;净有功需求增量&lt;/strong&gt;不是1个单位，原因前已述及，即频率下降时负荷需求自动减小。&lt;/p&gt;
&lt;p&gt;一次调频无法保证频率的长期稳定，难以实现无差调频。&lt;/p&gt;
&lt;h2&gt;二次调频&lt;/h2&gt;
&lt;p&gt;在发电机组调频器参与下的调频称为二次调频，这在图像上体现为机组静特性曲线的平移。&lt;/p&gt;
&lt;p&gt;二次调频可以实现无差调频，即保持频率为额定值。二次调频一般由几个主调频发电厂承担，枯水季为水电厂，丰水季为经济效益不高的中温中压火电厂。&lt;/p&gt;
&lt;h2&gt;三次调频&lt;/h2&gt;
&lt;p&gt;与上述两种调频稍有不同，三次调频不是为了满足电能的供需平衡，而是考虑总燃料耗量最少时，负荷在各发电厂的分配问题，是一个数学优化模型；应用拉格朗日乘子法解决，发电厂燃料耗量对有功输出的导数定义为耗量微增率，各发电厂微增率相等时即为该优化问题的解，因此有等微增率准则的说法。&lt;/p&gt;
&lt;p&gt;三次调频应属于电力系统经济运行的内容。&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="power system"></category></entry><entry><title>PyPSA在电力系统潮流计算中的应用</title><link href="https://Black-Web.github.io/apply_python_psa.html" rel="alternate"></link><published>2018-06-16T12:00:00+08:00</published><updated>2018-06-16T12:00:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2018-06-16:/apply_python_psa.html</id><summary type="html">&lt;p&gt;介绍使用PyPSA进行潮流计算。&lt;/p&gt;</summary><content type="html">&lt;h1&gt;PyPSA 在电力系统潮流计算中的应用&lt;/h1&gt;
&lt;p&gt;Python语言被广泛应用于科学计算，尤其是当前炒的火热的人工智能领域，实际上，除了人工智能，在电力系统中，Python也可以发挥作用。&lt;/p&gt;
&lt;h2&gt;几个用于电力系统分析的Python程序包&lt;/h2&gt;
&lt;p&gt;目前有以下几个Python Package可用于电力系统分析，不一定会很全，欢迎&lt;a href="/contact"&gt;联系我&lt;/a&gt;进行补充。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lthurner/pandapower"&gt;pandapower&lt;/a&gt; -- 这个包由德国卡塞尔大学（University of Kassel）和弗劳恩霍夫研究所（Fraunhofer Institute）合作开发，具体可以参考&lt;a href="https://www.uni-kassel.de/eecs/en/fachgebiete/e2n/software.html"&gt;卡塞尔大学网站&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PyPSA/PyPSA"&gt;PyPSA&lt;/a&gt; -- 由&lt;a href="https://arxiv.org/abs/1707.09913"&gt;康奈尔大学&lt;/a&gt;主导开发。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rwl/PYPOWER"&gt;PYPOWER&lt;/a&gt; -- 这是一个matlab下matpower的Python移植，还有一个基于它的系统暂态稳定性仿真程序&lt;a href="https://github.com/susantoj/PYPOWER-Dynamics"&gt;PYPOWER-Dynamics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SanPen/GridCal"&gt;GridCal&lt;/a&gt; -- 带有图形界面的电力系统分析软件，画面很赞。看下面项目主页的示例图：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="GridCal示例图" src="https://raw.githubusercontent.com/SanPen/GridCal/master/pics/GridCal.png"/&gt;
&lt;em&gt; &lt;a href="https://github.com/bdw/GridKit"&gt;GridKit&lt;/a&gt; -- 由德国的一个SciGRID项目产生，但这个就不是纯粹用Python写成的了。
&lt;/em&gt; 还有一个国内的&lt;a href="https://github.com/Maples7/PowerFlowCalculation"&gt;PowerFlowCalculation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以看到在目前Dawn所收集到的信息里，有两个都是德国的，德国的电力工业也的确发达。&lt;/p&gt;
&lt;h2&gt;用PyPSA进行潮流计算&lt;/h2&gt;
&lt;p&gt;本文主要介绍PyPSA的使用，以何的教材&lt;code&gt;例题11-5&lt;/code&gt;作为算例，用Newton-Raphson法进行潮流计算。&lt;/p&gt;
&lt;p&gt;在开始前需导入以下包。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pypsa&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;psa&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;初始化网络&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;psa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Network&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'simple_net'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;首先创建一个网络，命名为&lt;code&gt;simple_net&lt;/code&gt;，当然也可以为complex net，名字开心就好。下面用一个循环加入4条母线：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Bus'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Bus {}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后可以查看各母线的有关参数，对这些参数的详细解释请参考官方文档，这里我们只关心&lt;code&gt;control&lt;/code&gt;一栏。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table class="dataframe"&gt;
&lt;thead&gt;
&lt;tr style="text-align: right;"&gt;
&lt;th&gt;attribute&lt;/th&gt;
&lt;th&gt;v_nom&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;x&lt;/th&gt;
&lt;th&gt;y&lt;/th&gt;
&lt;th&gt;carrier&lt;/th&gt;
&lt;th&gt;v_mag_pu_set&lt;/th&gt;
&lt;th&gt;v_mag_pu_min&lt;/th&gt;
&lt;th&gt;v_mag_pu_max&lt;/th&gt;
&lt;th&gt;control&lt;/th&gt;
&lt;th&gt;sub_network&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;Bus 1&lt;/th&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;AC&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;inf&lt;/td&gt;
&lt;td&gt;PQ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;Bus 2&lt;/th&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;AC&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;inf&lt;/td&gt;
&lt;td&gt;PQ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;Bus 3&lt;/th&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;AC&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;inf&lt;/td&gt;
&lt;td&gt;PQ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;Bus 4&lt;/th&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;AC&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;td&gt;inf&lt;/td&gt;
&lt;td&gt;PQ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;根据例题&lt;strong&gt;11-5&lt;/strong&gt;给定条件，节点3的控制类型应是&lt;code&gt;PV&lt;/code&gt;，节点4应为&lt;code&gt;Slack&lt;/code&gt;，即松弛节点/平衡节点。
这与上表显示不符，&lt;strong&gt;但先别急着直接改变它们的值&lt;/strong&gt;，文档对于&lt;code&gt;control&lt;/code&gt;值是这么说的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that this attribute is an output inherited from the controls of the generators attached to the bus; setting it directly on the bus will not have any effect.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说，进行潮流计算时，程序会根据所给条件，自动判断哪些节点是哪些类型，并在计算后作为输出结果。&lt;/p&gt;
&lt;h3&gt;参数设置&lt;/h3&gt;
&lt;p&gt;接下来向各节点添加支路，变压器和发电机,并添加负载。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Line'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Line 1-2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.01528&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Line'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Line 1-4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.0192&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Line'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Line 2-4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.08&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.01413&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Transformer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'T_1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus0&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bus1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'pi'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tap_ratio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Generator'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'G_4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Bus 4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;control&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Slack'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Generator'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'G_3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Bus 3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;control&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'PV'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;p_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Load'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Load 1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;p_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;q_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.18&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Load'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'Load 2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Bus 2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;p_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;q_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关于上面的代码，有三点需要注意：
&lt;em&gt; 变压器的变比默认是bus0与bus1的电压之比，即&lt;span class="math"&gt;\(k = V_{bus0} : V_{bus1}\)&lt;/span&gt;
&lt;/em&gt; PyPSA内部的变压器模型把输入的阻抗和导纳参数认为是归算到低压侧的参数，因此上面需要把参数除以变比平方来归算到低压侧。
* 连接有发电机的母线（Bus）的控制类型会随发电机的类型而改变。
文档原文是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that the control strategy for active and reactive power PQ/PV/Slack is set on the generators NOT on the buses.
Buses then inherit the control strategy from the generators attached at the bus (defaulting to PQ if there is no generator
attached). Any PV generator will make the whole bus a PV bus. For PV buses, the voltage magnitude set point is set
on the bus, not the generator, with bus.v_mag_pu_set since it is a bus property.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此还需设置3、4节点参数如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Bus 3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'v_mag_pu_set'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.10&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Bus 4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'v_mag_pu_set'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.05&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;一致性检查——用于排查潜在错误&lt;/h3&gt;
&lt;p&gt;至此，算例所给的所有参数都用上了，在进行潮流计算前，运行一致性检查：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;consistency_check&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;transformers&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;zero&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;could&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;flow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'T_1'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'object'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;transformers&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;zero&lt;/span&gt; &lt;span class="n"&gt;s_nom&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;impedance&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;thus&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;flow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'T_1'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'object'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;dataframe&lt;/span&gt; &lt;span class="n"&gt;transformers&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;wrong&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'tap_side'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tap_position'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'object'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'attribute'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;They&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt;
&lt;span class="n"&gt;tap_side&lt;/span&gt;        &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;tap_position&lt;/span&gt;    &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
&lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;should&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt;
&lt;span class="n"&gt;tap_side&lt;/span&gt;        &lt;span class="n"&gt;int32&lt;/span&gt;
&lt;span class="n"&gt;tap_position&lt;/span&gt;    &lt;span class="n"&gt;int32&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;attributes&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;dataframe&lt;/span&gt; &lt;span class="n"&gt;generators&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;wrong&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'min_up_time'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'min_down_time'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'initial_status'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'object'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'attribute'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;They&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt;
&lt;span class="n"&gt;min_up_time&lt;/span&gt;       &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;min_down_time&lt;/span&gt;     &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;initial_status&lt;/span&gt;    &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
&lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;should&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;attribute&lt;/span&gt;
&lt;span class="n"&gt;min_up_time&lt;/span&gt;       &lt;span class="n"&gt;int32&lt;/span&gt;
&lt;span class="n"&gt;min_down_time&lt;/span&gt;     &lt;span class="n"&gt;int32&lt;/span&gt;
&lt;span class="n"&gt;initial_status&lt;/span&gt;    &lt;span class="n"&gt;int32&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;有几条&lt;code&gt;warning&lt;/code&gt;，我们能处理的是第二条，这关系的到潮流计算的正确性，至于其他，暂时先不予理会。(&lt;em&gt;其实在写这篇文章时Dawn也还不知道其他&lt;code&gt;warning&lt;/code&gt;会有什么影响&lt;/em&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#warning处理：设置变压器基准功率&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transformers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s_nom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;
&lt;span class="c1"&gt;#计算潮流&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Slack&lt;/span&gt; &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;Bus&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Performing&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;flow&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;AC&lt;/span&gt; &lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt; &lt;span class="n"&gt;SubNetwork&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;snapshots&lt;/span&gt; &lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'now'&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'object'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pypsa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Newton&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Raphson&lt;/span&gt; &lt;span class="n"&gt;solved&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;iterations&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mf"&gt;0.000000&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;0.015626&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;





&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'n_iter'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;
 &lt;span class="n"&gt;now&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'error'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;                 &lt;span class="mi"&gt;0&lt;/span&gt;
 &lt;span class="n"&gt;now&lt;/span&gt;  &lt;span class="mf"&gt;1.104187&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'converged'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;         &lt;span class="mi"&gt;0&lt;/span&gt;
 &lt;span class="n"&gt;now&lt;/span&gt;  &lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;结果&lt;/h3&gt;
&lt;p&gt;然后显示出结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#各节点功率&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses_t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table class="dataframe"&gt;
&lt;thead&gt;
&lt;tr style="text-align: right;"&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Bus 1&lt;/th&gt;
&lt;th&gt;Bus 2&lt;/th&gt;
&lt;th&gt;Bus 3&lt;/th&gt;
&lt;th&gt;Bus 4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;now&lt;/th&gt;
&lt;td&gt;-0.3&lt;/td&gt;
&lt;td&gt;-0.55&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;td&gt;0.367883&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses_t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table class="dataframe"&gt;
&lt;thead&gt;
&lt;tr style="text-align: right;"&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Bus 1&lt;/th&gt;
&lt;th&gt;Bus 2&lt;/th&gt;
&lt;th&gt;Bus 3&lt;/th&gt;
&lt;th&gt;Bus 4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;now&lt;/th&gt;
&lt;td&gt;-0.18&lt;/td&gt;
&lt;td&gt;-0.13&lt;/td&gt;
&lt;td&gt;0.093411&lt;/td&gt;
&lt;td&gt;0.264698&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#各线路功率&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lines_t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;p0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table class="dataframe"&gt;
&lt;thead&gt;
&lt;tr style="text-align: right;"&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Line 1-2&lt;/th&gt;
&lt;th&gt;Line 1-4&lt;/th&gt;
&lt;th&gt;Line 2-4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;now&lt;/th&gt;
&lt;td&gt;0.246244&lt;/td&gt;
&lt;td&gt;-0.046244&lt;/td&gt;
&lt;td&gt;-0.31001&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#各母线电压幅值&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses_t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v_mag_pu&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table class="dataframe"&gt;
&lt;thead&gt;
&lt;tr style="text-align: right;"&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Bus 1&lt;/th&gt;
&lt;th&gt;Bus 2&lt;/th&gt;
&lt;th&gt;Bus 3&lt;/th&gt;
&lt;th&gt;Bus 4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;now&lt;/th&gt;
&lt;td&gt;0.984675&lt;/td&gt;
&lt;td&gt;0.964798&lt;/td&gt;
&lt;td&gt;1.1&lt;/td&gt;
&lt;td&gt;1.05&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#各母线电压相角，转换为角度制表示&lt;/span&gt;
&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;buses_t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v_ang&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table class="dataframe"&gt;
&lt;thead&gt;
&lt;tr style="text-align: right;"&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Bus 1&lt;/th&gt;
&lt;th&gt;Bus 2&lt;/th&gt;
&lt;th&gt;Bus 3&lt;/th&gt;
&lt;th&gt;Bus 4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;now&lt;/th&gt;
&lt;td&gt;-0.500171&lt;/td&gt;
&lt;td&gt;-6.450304&lt;/td&gt;
&lt;td&gt;6.732349&lt;/td&gt;
&lt;td&gt;0.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2&gt;小结&lt;/h2&gt;
&lt;p&gt;以上用一个算例对PyPSA进行了简单介绍，PyPSA还带有一个基于Web的图形界面，效果同样不错，具体可以看看&lt;a href="https://www.pypsa.org/animations/pypsa-eur-30/"&gt;这个演示&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;除了潮流计算，PyPSA还能进行最优潮流规划(OPF)，更多请参见官方文档&lt;/p&gt;
&lt;p&gt;PyPSA的设计比较好，接口清晰，文档完善，不过这个包仍在开发当中，尚不能进行短路计算。&lt;/p&gt;
&lt;h2&gt;参考文献&lt;/h2&gt;
&lt;p&gt;1.何仰赞，温增银.电力系统分析(下)(第四版).武汉：华中科技大学出版社,2016.&lt;/p&gt;
&lt;p&gt;2.PyPSA参考文档：https://www.pypsa.org/doc/&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="python"></category><category term="power system"></category></entry><entry><title>pelican建站小记</title><link href="https://Black-Web.github.io/pelican_sitebuild_record.html" rel="alternate"></link><published>2018-04-20T13:00:00+08:00</published><updated>2018-04-20T13:00:00+08:00</updated><author><name>Dawn</name></author><id>tag:black-web.github.io,2018-04-20:/pelican_sitebuild_record.html</id><summary type="html">&lt;p&gt;很早之前就有了建立个人网站的想法，曾经尝试过django、wordpress，觉得django太繁...直到遇到了pelican。&lt;/p&gt;</summary><content type="html">&lt;h1&gt;pelican建站小记&lt;/h1&gt;
&lt;p&gt;很早之前就有了建立个人网站的想法，Dawn并非IT行业的人，曾经尝试过django、wordpress，觉得django太繁，wordpress虽然很好，但总觉得太傻瓜化了，而且是php写的，不是博主所熟悉的python。&lt;/p&gt;
&lt;p&gt;直到遇到了pelican。&lt;/p&gt;
&lt;h2&gt;pelican 功能简介&lt;/h2&gt;
&lt;p&gt;下面是从pelican主页上摘下来的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chronological content (e.g., articles, blog posts) as well as static pages&lt;/li&gt;
&lt;li&gt;Integration with external services (e.g., Google Analytics and Disqus)&lt;/li&gt;
&lt;li&gt;Site themes (created using Jinja2 templates)&lt;/li&gt;
&lt;li&gt;Publication of articles in multiple languages&lt;/li&gt;
&lt;li&gt;Generation of Atom and RSS feeds&lt;/li&gt;
&lt;li&gt;Syntax highlighting via Pygments&lt;/li&gt;
&lt;li&gt;Importing existing content from WordPress, Dotclear, and other services&lt;/li&gt;
&lt;li&gt;Fast rebuild times due to content caching and selective output writing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于个人博客而言，足够好用了。而且还支持markdown，配上插件还能把jupyter notebook转换成网页；最重要的是，整条工具链都是python，不必触及其他，减小了学习成本，简直完美。&lt;/p&gt;
&lt;p&gt;以下内容主要参考了&lt;a href="https://www.dataquest.io/blog/how-to-setup-a-data-science-blog/"&gt;Building a Data Science Portfolio: Setting Up a Blog&lt;/a&gt;，内容还是很详细的。&lt;/p&gt;
&lt;h2&gt;折腾的过程1 -- 使用pelican&lt;/h2&gt;
&lt;h3&gt;Prequisite|一些前置准备&lt;/h3&gt;
&lt;p&gt;由于不打算写成教程，本文只记录一些关键点。&lt;/p&gt;
&lt;p&gt;要用到的工具软件有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;git -- 站点暂时放在GitHub上，顺带还能利用一下版本控制。&lt;/li&gt;
&lt;li&gt;pelican -- 感觉这个才应该放在第一个，如本文标题所述。&lt;/li&gt;
&lt;li&gt;ghp-import -- 用于将生成的网页提交到master分支&lt;/li&gt;
&lt;li&gt;pelican-ipynb -- 一个用于将jupyter notebook转换为网页的插件&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;quick_start&lt;/h3&gt;
&lt;p&gt;新建目录&lt;code&gt;blog&lt;/code&gt;,在&lt;code&gt;blog&lt;/code&gt;下命令行运行&lt;code&gt;pelican-quickstart&lt;/code&gt;,这时pelican会对要建立的网站进行一系列询问，只在下面的问题下选&lt;code&gt;n&lt;/code&gt;，其余一路回车键接受默认设置。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Do you want to specify a URL prefix? e.g., http://example.com&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;然后&lt;code&gt;git init&lt;/code&gt;初始化仓库，进行版本控制。&lt;/p&gt;
&lt;h3&gt;插件安装和配置&lt;/h3&gt;
&lt;p&gt;新建目录&lt;code&gt;plugins&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;运行&lt;code&gt;git submodule add git://github.com/danielfrg/pelican-ipynb.git plugins/ipynb&lt;/code&gt;来安装pelican-ipynb插件。&lt;/p&gt;
&lt;p&gt;打开&lt;code&gt;pelicanconf.py&lt;/code&gt;，在末尾加入以下内容来启用插件。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;MARKUP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'md'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ipynb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;PLUGIN_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'./plugins'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'ipynb.markup'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;写一篇博文&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;content&lt;/code&gt;目录下新建一个&lt;code&gt;.ipynb&lt;/code&gt;文档，同时新建一个&lt;code&gt;.ipynb-meta&lt;/code&gt;来保存元信息。&lt;/p&gt;
&lt;p&gt;接下来就是编辑文档和元信息了。&lt;/p&gt;
&lt;h3&gt;转换为html&lt;/h3&gt;
&lt;p&gt;回到blog目录下，运行&lt;code&gt;pelican content&lt;/code&gt;，这会创建&lt;code&gt;output&lt;/code&gt;文件夹，里面是html网页文件。&lt;/p&gt;
&lt;p&gt;切换到&lt;code&gt;output&lt;/code&gt;文件夹下，运行&lt;code&gt;python -m pelican.server&lt;/code&gt;。就可以在本地&lt;code&gt;8000&lt;/code&gt;端口访问的到刚刚生成的网页了。&lt;/p&gt;
&lt;p&gt;但是目前还只能用于本地访问，主要是作调试用途。&lt;/p&gt;
&lt;h2&gt;折腾的过程2 -- 部署到GitHub&lt;/h2&gt;
&lt;p&gt;这一步卡了很久，是因为部署本地网页到服务器是全新的内容，之前没有接触过。&lt;/p&gt;
&lt;h3&gt;GitHub Pages&lt;/h3&gt;
&lt;p&gt;得益于&lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;服务，暂时不需要购买服务器和域名，GitHub Pages会把名为&lt;code&gt;username.github.io&lt;/code&gt;仓库的master分支渲染为网页，前提是仓库里存在html网页。&lt;/p&gt;
&lt;p&gt;首先需要在GitHub上建立一个名为&lt;code&gt;username.github.io&lt;/code&gt;结尾的仓库，以本博客为例，即&lt;code&gt;black-web.github.io&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然后运行&lt;code&gt;git remote add origin git@github.com:username/username.github.io.git&lt;/code&gt;来建立本地仓库和远程仓库的链接。&lt;/p&gt;
&lt;p&gt;接下来打开&lt;code&gt;publishconf.py&lt;/code&gt;,把&lt;code&gt;SITEURL&lt;/code&gt;设置为&lt;code&gt;http://username.github.io&lt;/code&gt;。同上一步一样，username需要改成GitHub用户名。&lt;/p&gt;
&lt;p&gt;再运行&lt;code&gt;pelican content -s publishconf.py&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;当只需要在本地预览时，运行&lt;code&gt;pelican content&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;而需要将网站部署到服务器时，运行&lt;code&gt;pelican content -s publishconf.py&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;提交和部署&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git checkout -b dev&lt;/code&gt;建立并切换到新dev分支下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;master分支才会被GitHub Pages渲染，所以需要建立一个dev分支来保存pelican的运行环境，而master分支则用来存储网页内容，另外，gh-import给两个分支的转换带来了极大的方便。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;运行&lt;code&gt;ghp-import output -b master&lt;/code&gt;会将&lt;code&gt;output&lt;/code&gt;目录下的内容commit到master分支。&lt;/p&gt;
&lt;p&gt;然后&lt;code&gt;git push master origin&lt;/code&gt;把master分支推送到GitHub。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;dev分支可以只保留在本地&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;访问&lt;a href="https://black-web.github.io/"&gt;black-web.github.io&lt;/a&gt;，内容呈现出来，所有的折腾换来这一刻的喜悦。&lt;/p&gt;
&lt;p&gt;到这里，整个过程就结束了。&lt;/p&gt;
&lt;h2&gt;notable|重点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;当只需要在本地预览时，运行&lt;code&gt;pelican content&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;而需要将网站部署到服务器时，运行&lt;code&gt;pelican content -s publishconf.py&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;master分支才会被GitHub Pages渲染，所以需要建立一个dev分支来保存pelican的运行环境，而master分支则用来存储网页内容，另外，gh-import给两个分支的转换带来了极大的方便。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;futher work|进一步的折腾&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;pelican的更高级的用法，比如主题、其他插件、评论系统等等&lt;/li&gt;
&lt;li&gt;最重要的当然还是发post了&lt;/li&gt;
&lt;/ul&gt;</content><category term="python"></category><category term="pelican"></category></entry></feed>